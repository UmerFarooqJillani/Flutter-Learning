Flutter UI Core Concepts
-------------------------------------- widget ---------------------------------------------
--> Widget
    - A blueprint or configuration for a piece of UI (not the actual UI itself).
    - It describes how the UI should look (e.g., a button, text, layout).
    - Widgets are immutable – once created, they cannot be changed. If something changes, 
      a new widget is created and rendered.
    - If the UI needs to update (e.g., user types input), Flutter builds a new widget based on 
      the latest state, and the framework compares it to the old one and updates efficiently.
    - It only describes what the UI should look like but doesn't build or render anything by itself.
    - Widgets can be stateless (no internal change) or stateful (holds mutable state).
    Example:
        Padding(
            padding: EdgeInsets.all(16.0),
            child: Text("Hello"),
        )

-------------------------------------- Element ---------------------------------------------
--> Element
    - An element is the live 'instance' of a widget in the UI tree.
    - It holds:
        - A reference to the widget
        - A place (slot) in the widget tree
        - Manage/Link to parent and children elements
    - Manages the widget's lifecycle, including creation, updates, and disposal.
    - When the UI changes, Flutter compares old and new widgets, and the element updates accordingly.
    - Elements are like the workers that interpret blueprints and manage where and how components are built.

-------------------------------------- RenderObject ---------------------------------------------
--> RenderObject
    Render objects are responsible for:
    - Layout: Measuring and positioning widgets on screen.
    - Painting: Drawing pixels on the screen.
    - Hit testing: Detecting gestures and user interaction.
    - Not all widgets have render objects. Only visual widgets (like Container, Text, Image) do.
    - Render objects are the builders and painters that do the heavy lifting based on the 
      element’s instructions.
-------------------------------------- State ---------------------------------------------------
--> State	
    Holds data that can change (used in StatefulWidget)
-------------------------------------- Real Life Example ---------------------------------------
--> Real-Life Analogy
    - Widget → 	Blueprint of a building
    - Element → Construction manager
    - RenderObject → Workers & materials doing the work





